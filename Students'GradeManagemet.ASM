.386
;ascii:空格是20H,'是27H
PRINT MACRO STRING
LEA DX,STRING
MOV AH,9
INT 21H
ENDM

SCANF MACRO STRING
LEA DX,STRING
MOV AH,10
INT 21H
MOV BL,STRING+1
MOV BH,0
MOV BYTE PTR STRING+2[BX],'$'
ENDM

BACK_JUDGE MACRO BUF;判断是否直接输入回车(即返回开始界面)
LEA SI,BUF+1
MOV BL,[SI]
CMP BL,00H
JE GOBACK
ENDM

QUIT_JUDGE MACRO BUF;判断是否输入'Q'或'q'退出程序
MOV BH,BUF+2
MOV BL,BUF+1
CALL ISQ
ENDM

STACKSET SEGMENT USE16 STACK
DB 200 DUP(0)
STACKSET ENDS

DATA SEGMENT USE16
CRLF DB 0DH,0AH,'$'
ALERT_BACK DB 'Back to main menu!',19 DUP(20H),0DH,0AH,'$';空格是为了正好"消去"查询语句
ALERT_INPUT DB 'Input successfully.',0DH,0AH,'$'
ALERT_FULL DB 'Table is full, press enter to main menu.$'
ALERT_NOTFOUND DB '  NOT  FOUND',24 DUP(20H),0DH,0AH,'$'
ALERT_ERROR DB 'Input error,please choose a right key!',0DH,0AH,'$'
WELCOME_EDGE DB 42 DUP('-'),0DH,0AH,'$'
WELCOME_BLANK DB '|',40 DUP(20H),'|',0DH,0AH,'$'
WELCOME_HEADLINE DB '|',20H,20H,'Welcome to Student Management System',20H,20H,'|',0DH,0AH,'$'
WELCOME_INSERT DB '|',15 DUP(20H),'1. Insert',16 DUP(20H),'|',0DH,0AH,'$'
WELCOME_QUERY DB '|',15 DUP(20H),'2. Query',17 DUP(20H),'|',0DH,0AH,'$'
WELCOME_QUIT DB '|',15 DUP(20H),'Q. Quit',18 DUP(20H),'|',0DH,0AH,'$'
CHOICE_INPUT DB 'Please input your choice:$'
CHOICE_BUF DB 2;定义缓冲区大小(使得实际最多只能输入1位,输入第2位会发现按回车键失效从而不能向下执行)
		   DB ?
		   DB 2 DUP(0)
ID_INPUT DB 'Input student',27H,'s ID(Enter ',27H,'Q',27H,' to exit):$'
ID_BUF DB 6;定义缓冲区大小(最多输入5位学号)
	   DB ?
	   DB 6 DUP(0)
SCORE_INPUT DB 'Input student',27H,'s score(Enter ',27H,'Q',27H,' to exit):$'
SCORE_BUF DB 4;定义缓冲区大小(最多输入3位成绩)
		  DB ?
		  DB 4 DUP(0)
RANKING_INPUT DB 'Input student',27H,'S ranking(Enter ',27H,'Q',27H,' to exit):$'
RANKING_BUF DB 5;定义缓冲区大小(书上是1000名学生所以暂定名次最多为4位)
			DB ?
			DB 5 DUP(0)
QUERY_HEAD DB 'Student ID    Score    Ranking',0DH,0AH,'$'
QUERY_INPUT DB 'Query by ID (Enter ',27H,'Q',27H,' to exit):$'
QUERY_BUF DB 6;定义缓冲区大小(使得实际最多只能输入5位学号)
	DB ?
	DB 6 DUP(0)
MAX_N DB 0AH;预定义最多能输入N=10个
N DB 00H;当前输入的数目
RESULT DB 37 DUP(20H),0DH,0AH,'$'
DATA ENDS

EX_DATA SEGMENT USE16
N1 DB 37 DUP(20H),'$'
N2 DB 37 DUP(20H),'$'
N3 DB 37 DUP(20H),'$'
N4 DB 37 DUP(20H),'$'
N5 DB 37 DUP(20H),'$'
N6 DB 37 DUP(20H),'$'
N7 DB 37 DUP(20H),'$'
N8 DB 37 DUP(20H),'$'
N9 DB 37 DUP(20H),'$'
N10 DB 37 DUP(20H),'$'
EX_DATA ENDS

CODE SEGMENT USE16
ASSUME CS:CODE,DS:DATA,SS:STACKSET,ES:EX_DATA
START:
;处理段寄存器
MOV AX,EX_DATA
MOV ES,AX
MOV AX,DATA
MOV DS,AX

;打印开始界面
PRINT WELCOME_EDGE
PRINT WELCOME_BLANK
PRINT WELCOME_BLANK
PRINT WELCOME_HEADLINE
PRINT WELCOME_BLANK
PRINT WELCOME_INSERT
PRINT WELCOME_QUERY
PRINT WELCOME_QUIT
PRINT WELCOME_BLANK
PRINT WELCOME_BLANK
PRINT WELCOME_EDGE

;进行选择
CHOOSE:
PRINT CHOICE_INPUT
SCANF CHOICE_BUF
PRINT CRLF
LEA SI,CHOICE_BUF+2
MOV BL,[SI]
;输入的q暂定为不区分大小写(DOSBox按住shitf才能输入大写字母,这个估计很多人不知道)
CMP BL,71H;q的ascii值:113
JE EXIT
CMP BL,51H;Q的ascii值:81
JE EXIT
CMP BL,31H;1的ascii值:49
JE INPUT
CMP BL,32H;2的ascii值:50
JE QUERY
PRINT ALERT_ERROR
JMP CHOOSE


;输入信息
INPUT:
MOV BH,MAX_N
MOV BL,N
CMP BH,BL;判断是否输入了最后一条
JE FULL

PRINT ID_INPUT
SCANF ID_BUF;输入学号
PRINT CRLF
BACK_JUDGE ID_BUF;判断是否直接输入回车返回开始界面
QUIT_JUDGE ID_BUF;判断是否输入'Q'或'q'退出整个程序

PRINT SCORE_INPUT
SCANF SCORE_BUF;输入成绩
PRINT CRLF
BACK_JUDGE SCORE_BUF;判断是否直接输入回车返回开始界面
QUIT_JUDGE SCORE_BUF;判断是否输入'Q'或'q'退出整个程序

PRINT RANKING_INPUT
SCANF RANKING_BUF;输入名次
PRINT CRLF
BACK_JUDGE RANKING_BUF;判断是否直接输入回车返回开始界面
QUIT_JUDGE RANKING_BUF;判断是否输入'Q'或'q'退出整个程序

MOV BH,00H
MOV BL,N;BX储存偏移量
LEA DI,N1;得到存储信息的首地址
MOV CX,38
FIND_DESPTR:
ADD DI,BX
LOOP FIND_DESPTR;得到录入信息的首地址
INC BX;更新N值
MOV BYTE PTR N,BL
LEA SI,MAX_N
MOV BH,[SI];BH和BL分别存储MAX_N和N

LEA SI,ID_BUF
MOV CH,0
MOV CL,ID_BUF+1;得到串长度
ADD SI,2
PUSH DI;保护指针
REP MOVSB;转移学号
POP DI

ADD DI,14;对齐
LEA SI,SCORE_BUF
MOV CH,0
MOV CL,SCORE_BUF+1
ADD SI,2
PUSH DI;保护指针
REP MOVSB;转移成绩
POP DI

ADD DI,9;对齐
LEA SI,RANKING_BUF
MOV CH,0
MOV CL,RANKING_BUF+1
ADD SI,2
REP MOVSB
PRINT ALERT_INPUT;提醒序列化成功
JMP INPUT

;查询信息
QUERY:
PRINT QUERY_HEAD

QUERYFLOW:
PRINT QUERY_INPUT
SCANF QUERY_BUF
BACK_JUDGE QUERY_BUF
QUIT_JUDGE QUERY_BUF

MOV CH,0 
MOV CL,N
LEA DI,N1
POLLING:
PUSH CX
PUSH DI;将当前信息的首地址存储起来
MOV CH,0
MOV CL,QUERY_BUF+1;得到查询串长度
LEA SI,QUERY_BUF
ADD SI,2
COMPARE:
MOV AH,DS:[SI]
MOV AL,ES:[DI]
CMP AH,AL
JNE NEXT;不相等则进入下一轮比较
INC SI
INC DI
LOOP COMPARE
MOV AL,ES:[DI]
CMP AL,20H
JNE NEXT
POP DI
POP CX;没用,但是为了避免栈溢出还是要把栈清空
MOV CX,37
LEA SI,RESULT
INSET:;将得到的结果转移至RESULT中
MOV AL,ES:[DI]
MOV DS:[SI],AL
INC SI
INC DI
LOOP INSET
PRINT RESULT
JMP QUERYFLOW

NEXT:;该轮没有查询到
POP DI
ADD DI,38
POP CX
LOOP POLLING
PRINT QUERY_BUF+2
PRINT ALERT_NOTFOUND;若查询不到则输出NOT FOUND
JMP QUERYFLOW

;退出整个程序
EXIT:
MOV AH,4CH
INT 21H

;只输入回车而回到主菜单
GOBACK:
PRINT ALERT_BACK
JMP START

;判断查询或输入过程中只输入一个字符时该字符是否为'Q'或者'q'
ISQ:
CMP BL,01H;判断是否只输入一个字符
JNE RETURN
CMP BH,71H;q的ascii值:113
JE EXIT
CMP BH,51H;Q的ascii值:81
JE EXIT
RETURN:
RET

;输入MAX_N条后
FULL:
PRINT ALERT_FULL
NOT_ENTER:
MOV AH,1
INT 21H
CMP AL,0DH;不是回车则不跳回
JNE NOT_ENTER
PRINT CRLF
JMP START

CODE ENDS
END START